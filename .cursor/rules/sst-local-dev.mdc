---
description: 
globs: 
alwaysApply: true
---
# SST local app development workflow

- This app uses SSTv3.
- Note that there are significant differences between SSTv2 and v3. Please inform the user if you are not familiar with v3.
- The user runs the app locally via `npx sst dev`
- You can assume that the app is running locally. If you think it's not running, confirm by running `find .sst -name "*.server" -type f` to check if a .server file exist in `.sst/`. If it exists, the app is running locally. If not, the app is not running. Ask the user to start it by running "npx sst dev" in a separate terminal. Don't try to do anything further until the user has started the server.
- Never run `npx sst dev` yourself. If it needs started or restarted, ask the user to run it in a separate terminal.
- Logs are written to `.sst/log`. The exact logs will depend on the type of application and infrastructure used, but they may include:
   - `.sst/log/pulumi.log` - infrastructure logs
   - `.sst/lambda/<MyFunction>/<id>.log` - lambda invocation logs
   - `.sst/log/web.log` - web app logs (e.g. nextjs or React Router app). You can get the URL of the web app in this log.
- `.sst/outputs.json` contains infrastructure outputs, e.g. backend endpoints.
- As the application is running in sst dev mode, all changes to backend/frontend code and infrastructure (in sst.config.ts) will be automatically reloaded. Code reloading takes a few seconds. Infrastructure changes can take longer so you might want to watch the logs.
- Always run `[ -f ./env.sh ] && source ./env.sh` before any AWS CLI commands. 
- Only run read-only AWS CLI commands unless explicitly instructed by the user.